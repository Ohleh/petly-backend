{
    "openapi": "3.0.1",
    "info": {
      "version": "1.0.1",
      "title": "Petly API Docs",
      "description": "Showing off swagger-ui-express",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json", "multipart/form-data"],
    "servers": [{ "url": "http://localhost:4000" }],
    "tags": [
      {
        "name": "Auth",
        "description": "Authorization endpoints"        
      },
      {
        "name": "Services-sidebar",
        "description": "Services-sidebar endpoints"        
      },
      {
        "name": "News",
        "description": "News endpoints"        
      },
      {
        "name": "Notices",
        "description": "Notices endpoints"        
      },
      {
        "name": "User",
        "description": "User endpoints"        
      }
    ],
    "paths": {
      "/api/auth/register": {
        "post": {
          "tags": ["Auth"],
          "summary": "Create a new user",
          
          "parameters": [],

          "requestBody": {
            "description": "Registration's object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegistrationResponse"
                  }
                }
              }
            },
            "400": { "description": "Bad Request"              
            },
            "409": { "description": "Email in use"              
            },
            "500": { "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/login": {
        "post": {
          "tags": ["Auth"],
          "summary": "User login",

          "parameters": [],

          "requestBody": {
            "description": "Login object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"              
            },
            "401": {
              "description": "Email or password is wrong"              
            },
            "500": { "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/logout": {
        "post": {
          "tags": ["Auth"],
          "summary": "Log out user",

          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],
          "security": [{ "Bearer": [] }],

          "responses": {
            "204": {
              "description": "Logout success"              
            },            
            "401": {
              "description": "Missing header with authorization token"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/current": {
        "get": {
          "tags": ["Auth"],
          "summary": "Get information about the current user",

          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],
          "security": [{ "Bearer": [] }],

          "responses": { 
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetUserInfoResponse"
                  }
                }
              }              
            },           
            "401": {
              "description": "Not authorized"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      }, 

      "/api/auth/update": {
        "patch": {
          "tags": ["Auth"],
          "summary": "Update information about the current user",

          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],
          "security": [{ "Bearer": [] }],

          "responses": { 
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetUserInfoResponse"
                  }
                }
              }                
            },           
            "401": {
              "description": "Not authorized"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/avatar": {
        "patch": {
          "tags": ["Auth"],
          "summary": "Update user avatar",

          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],
          "security": [{ "Bearer": [] }],

          "responses": { 
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "example": [
                    { "avatarURL": "string" }
                  ]
                }
              }             
            },           
            "401": {
              "description": "Not authorized"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/google": {
        "get": {
          "tags": ["Auth"],
          "summary": "Authorization of a new user through Google",
          
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": "true",
              "type": "string",
              "description": "The token issued to the current user"
            }
          ],
          "security": [{ "Bearer": [] }],

          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "email": "User's email"                  
                },                
                "example": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "example": "bjohnson@gmail.com"            
                  }
                }
              }
            }
          },

          "responses": {
            "200": {
              "description": "Successful operation"              
            },
            "404": {
              "description": "User not found"              
            },            
            "500": { "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/google/callback": {
        "get": {
          "tags": ["Auth"],
          "summary": "Authorization of a new user through Google",
          
          
          "parameters": [],
          "security": [{ "Bearer": [] }],

          "responses": {
            "201": {
              "description": "Successful operation"
            },
            "401": {
              "description": "Not authorized"              
            },
            "500": { "description": "Server error"              
            }
          }
        }
      },
      "/api/auth/restore": {
        "patch": {
          "tags": ["Auth"],
          "summary": "Restore user password",

          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "email": "User's email"                  
                },                
                "example": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "example": "bjohnson@gmail.com"            
                  }
                }
              }
            }
          },

          "parameters": [],

          "security": [{ "Bearer": [] }],

          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "example": 
                    { "message": "New password email sent" }                  
                }
              }                
            },            
            "404": {
              "description": "Email is not found"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/verify/:verificationToken": {
        "get": {
          "tags": ["Auth"],
          "summary": "Update user token",
          
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": "true",
              "type": "string",
              "description": "The token issued to the current user"
            }
          ],
          "security": [{ "Bearer": [] }],

          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"                  
                },                
                "example": {
                  "verificationToken": {
                    "type": "string",
                    "description": "User's verificationToken" 
                  }
                }
              }
            }
          },

          "responses": {
            "200": {
              "description": "Verification successful"              
            },
            "401": {
              "description": "Not authorized"              
            },            
            "500": { "description": "Server error"              
            }
          }
        }
      },

      "/api/auth/verify": {
        "post": {
          "tags": ["Auth"],
          "summary": "Verify user Email",
          
          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],

          "security": [{ "Bearer": [] }],

          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "email": "User's email"                 
                },                
                "example": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "example": "bjohnson@gmail.com"            
                  }
                }
              }
            }
          },

          "responses": {
            "200": {
              "description": "Verification email sent"              
            },
            "400": { "description": "Verification has already been passed"              
            },
            "404": {
              "description": "User is not found"              
            }            
            
          }
        }
      },

      "/api/friends": {
        "get": {
          "tags": ["Services-sidebar"],
          "summary": "Obtaining contact information about services that provide services",

          "parameters": [],

          "requestBody": {
            "description": "Sponsors object",            
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getFriendsRequest"
                }
              }
            }
          },
          
          "responses": {
            "201": {
              "description": "Successful operation"
            }, 
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/news": {
        "get": {
          "tags": ["News"],
          "summary": "Receiving news",

          "parameters": [],

          "requestBody": {
            "description": "News object",            
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getNewsRequest"
                }
              }
            }
          },
          
          "responses": {
            "200": {
              "description": "Successful operation"
            },
            "404": {
              "description": "Not find"
            }, 
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/notice/category/:categoryName": {
        "get": {
          "tags": ["Notices"],
          "summary": "Receiving ads by category",

          "requestBody": {
            "description": "Notice's object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noticeSchema"
                }
              }
            }
          },

          "parameters": [],

          "responses": { 
            "200": {
              "description": "Successful operation"              
            },           
            "404": {
              "description": "Not found"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/notice/add": {
        "post": {
          "tags": ["Notices"],
          "summary": "Adding ads according to the selected category",

          "requestBody": {
            "description": "Notice's object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addNoticeSchema"
                }
              }
            }
          },

          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],

          "security": [{ "Bearer": [] }],
         
          "responses": { 
            "201": {
              "description": "Successful operation"              
            },           
            "400": {
              "description": "File is required"              
            },
            "401": {
              "description": "Not authorized"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/notice/:id": {
        "get": {
          "tags": ["Notices"],
          "summary": "Receiving one ad",

          "parameters": [{
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User's id",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }],
          
          "responses": { 
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/noticeSchema"
                  }
                }
              }              
            },           
            "404": {
              "description": "Notice not found"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      "/api/mypets": {
        "get": {
          "tags": ["User"],
          "summary": "Receiving personal information about the user and information about the user's animals",

          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],
          "security": [{ "Bearer": [] }],

          "responses": { 
            "200": {
              "description": "Successful operation"              
            },           
            "401": {
              "description": "Not authorized"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        },
        "post": {
          "tags": ["User"],
          "summary": "Adding a user animal card",

          "parameters": [{
            "in": "header",
            "name": "authorization",
            "required": "true",
            "type": "string",
            "description": "The token issued to the current user"
          }],
          "security": [{ "Bearer": [] }],

          "responses": { 
            "201": {
              "description": "Successful operation"              
            },           
            "401": {
              "description": "Not authorized"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      },

      

      "/api/mypets/{petId}": {
        "delete": {
          "tags": ["User"],
          "summary": "Removing the card with the user's animal",

          "parameters": [],
          "security": [{ "Bearer": [] }],

          "responses": { 
            "200": {
              "description": "Successful operation"              
            },           
            "401": {
              "description": "Not authorized"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      }
    },

    "components": {
      "schemas": {
        "RegistrationRequest": {
          "type": "object",
          "required": ["email", "password", "name", "city", "phone"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "bjohnson@gmail.com"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "QWerty123"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Boris Johnson"
            },
            "city": {
              "type": "string",
              "description": "User's city and region",
              "example": "Brovary, Kyiv"
            },
            "phone": {
              "type": "string",
              "description": "User's phone",
              "example": "+380981112233"
            }
          }
        },

        "RegistrationResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Boris Johnson"
              },
              "email": {
                "type": "string",
                "description": "User's email",                
                "example": "bjohnson@gmail.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "avatar URL"
              }              
            }
          },
          "example": [
            { "name": "Boris Johnson", "email": "bjohnson@gmail.com", "avatarURL": "string" }
          ]
        },

        "LoginRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "example": "bjohnson@gmail.com"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "QWerty123"
            }
          }
        },

        "LoginResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Boris Johnson"                
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "bjohnson@gmail.com"
              }              
            }
          },
          "example": [
            { "name": "Boris Johnson", "email": "bjohnson@gmail.com" }
          ]         
        },

        "GetUserInfoRequest": {
          "type": "object",          
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "example": "bjohnson@gmail.com"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Boris Johnson"                
            },
            "city": {
              "type": "string",
              "description": "User's city and region",
              "example": "Brovary, Kyiv"
            },
            "phone": {
              "type": "string",
              "description": "User's phone",
              "example": "+380981112233"
            },
            "birthday": {
              "type": "string",
              "description": "User's birthday"              
            },
            "avatarURL": {
              "type": "string",
              "description": "avatar URL"
            }
          }
        },

        "GetUserInfoResponse": {
          "type": "object",          
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "example": "bjohnson@gmail.com"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Boris Johnson"                
            },
            "city": {
              "type": "string",
              "description": "User's city and region",
              "example": "Brovary, Kyiv"
            },
            "phone": {
              "type": "string",
              "description": "User's phone",
              "example": "+380981112233"
            },
            "birthday": {
              "type": "string",
              "description": "User's birthday"
            },
            "avatarURL": {
              "type": "string",
              "description": "avatar URL"
            }
          }
        },

        "getFriendsRequest": {
          "type": "object",          
          "properties": {
            "title": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "addressUrl": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "workDays": {
              "type": "object"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        },

        "getNewsRequest": {
          "type": "object",          
          "properties": {
            "title": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "date": {
              "type": "string"
            }
          }
        },

        "noticeSchema": {
          "type": "object",
          "required": ["tittle", "sex", "location", "category"],          
          "properties": {
            "tittle": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "dateOfBirth": {
              "type": "string"
            },
            "bread": {
              "type": "string"
            },
            "sex": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "price": {
              "type": "string"
            },
            "comments": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "petImage": {
              "type": "string"
            },
            "owner": {
              "type": "object"
            }
          }
        },

        "addNoticeSchema": {
          "type": "object",
          "required": ["tittle", "name", "dateOfBirth", "bread", "sex", "location", "price", "comments", "category", "petImage"],          
          "properties": {
            "tittle": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "dateOfBirth": {
              "type": "string"
            },
            "bread": {
              "type": "string"
            },
            "sex": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "price": {
              "type": "string"
            },
            "comments": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "petImage": {
              "type": "string"
            }
          }
        }
      },

      
      
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
    
  }