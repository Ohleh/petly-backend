{
    "openapi": "3.0.1",
    "info": {
      "version": "1.0.1",
      "title": "Swagger test",
      "description": "Showing off swagger-ui-express",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json", "multipart/form-data"],
    "servers": [{ "url": "http://localhost:3000" }],
    "tags": [
      {
        "name": "Auth",
        "description": "Authorization endpoints"        
      },
      {
        "name": "Services-sidebar",
        "description": "Services-sidebar endpoints"        
      },
      {
        "name": "News",
        "description": "News endpoints"        
      },
      {
        "name": "Notices",
        "description": "Notices endpoints"        
      },
      {
        "name": "User",
        "description": "User endpoints"        
      }
    ],
    "paths": {
      "/auth/register": {
        "post": {
          "tags": ["Auth"],
          "summary": "User registration",
          
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": "true",
              "type": "string",
              "description": "User's id"
            }
          ],
          "security": [{ "Bearer": [] }],

          "requestBody": {
            "description": "Registration's object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegistrationResponse"
                  }
                }
              }
            },
            "400": { "description": "Bad Request"              
            },
            "409": { "description": "Email in use"              
            },
            "500": { "description": "Server error"              
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": ["Auth"],
          "summary": "User login",

          "parameters": [],
          "security": [{ "Bearer": [] }],

          "requestBody": {
            "description": "Login object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"              
            },
            "401": {
              "description": "Email or password is wrong"              
            }
          }
        }
      },
      "/auth/logout": {
        "post": {
          "tags": ["Auth"],
          "summary": "User logout",

          "parameters": [],
          "security": [{ "Bearer": [] }],

          "responses": {
            "204": {
              "description": "Logout success"              
            },            
            "401": {
              "description": "Missing header with authorization token"              
            },
            "500": {
              "description": "Server error"              
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "RegistrationRequest": {
          "type": "object",
          "required": ["email", "password", "name", "city", "phone"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "bjohnson@gmail.com"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "QWerty123"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Boris Johnson"
            },
            "city": {
              "type": "string",
              "description": "User's city and region",
              "example": "Brovary, Kyiv"
            },
            "phone": {
              "type": "string",
              "description": "User's phone",
              "example": "+380981112233"
            }
          }
        },
        "RegistrationResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Boris Johnson"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "bjohnson@gmail.com"
              }
              
            }
          },
          "example": [
            { "name": "Boris Johnson", "email": "bjohnson@gmail.com" }
          ]
        },
        "LoginRequest": {
          "type": "object",
          "required": ["email", "password", "name", "city", "phone"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email"
            },
            "password": {
              "type": "string",
              "description": "User's password"
            }
          }
        },
        "LoginResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"                
              },
              "email": {
                "type": "string",
                "description": "User's email"
              }              
            }
          }          
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
    
  }